import 'package:flutter/material.dart';
import 'package:gong_mu_talk/common/widgets/lockable_info_card.dart';
import 'package:gong_mu_talk/core/utils/number_formatter.dart';
import 'package:gong_mu_talk/features/calculator/domain/entities/early_retirement_bonus.dart';

/// Î™ÖÏòàÌá¥ÏßÅÍ∏à Ïπ¥Îìú
class EarlyRetirementCard extends StatelessWidget {
  final bool isLocked;
  final EarlyRetirementBonus? earlyRetirementBonus;

  const EarlyRetirementCard({
    super.key,
    required this.isLocked,
    this.earlyRetirementBonus,
  });

  @override
  Widget build(BuildContext context) {
    return LockableInfoCard(
      isLocked: isLocked,
      title: 'Î™ÖÏòàÌá¥ÏßÅÍ∏à',
      icon: Icons.card_giftcard,
      iconColor: Theme.of(context).colorScheme.secondary,
      lockedMessage: '55ÏÑ∏ Ïù¥ÏÉÅ Ìá¥ÏßÅ Ïãú Ïù¥Ïö© Í∞ÄÎä•',
      content: earlyRetirementBonus != null ? _buildContent(context) : const SizedBox.shrink(),
    );
  }

  Widget _buildContent(BuildContext context) {
    return Column(
      children: [
        // Ï†ïÎÖÑÍπåÏßÄ ÏûîÏó¨Í∏∞Í∞Ñ
        _buildInfoRow(
          context,
          'Ï†ïÎÖÑÍπåÏßÄ ÏûîÏó¨Í∏∞Í∞Ñ',
          '${earlyRetirementBonus!.remainingYears}ÎÖÑ ${earlyRetirementBonus!.remainingMonths}Í∞úÏõî',
        ),
        const SizedBox(height: 12),

        // Í∏∞Î≥∏ Î™ÖÌá¥Í∏à
        _buildInfoRow(
          context,
          'Í∏∞Î≥∏ Î™ÖÌá¥Í∏à',
          NumberFormatter.formatCurrency(earlyRetirementBonus!.baseAmount),
        ),
        const SizedBox(height: 12),

        // Í∞ÄÏÇ∞Í∏à
        if (earlyRetirementBonus!.bonusAmount > 0)
          _buildInfoRow(
            context,
            'Í∞ÄÏÇ∞Í∏à (55ÏÑ∏ Ïù¥ÏÉÅ 10% Ï∂îÍ∞Ä)',
            NumberFormatter.formatCurrency(earlyRetirementBonus!.bonusAmount),
          ),
        const SizedBox(height: 16),
        const Divider(),
        const SizedBox(height: 16),

        // Ï¥ù Î™ÖÏòàÌá¥ÏßÅÍ∏à
        _buildSummaryRow(
          context,
          'üéÅ Ï¥ù Î™ÖÏòàÌá¥ÏßÅÍ∏à',
          NumberFormatter.formatCurrency(earlyRetirementBonus!.totalAmount),
        ),
      ],
    );
  }

  Widget _buildInfoRow(BuildContext context, String label, String value) {
    final colorScheme = Theme.of(context).colorScheme;

    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Text(
          label,
          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
            color: colorScheme.onSurfaceVariant,
          ),
        ),
        Text(
          value,
          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
            fontWeight: FontWeight.w600,
            color: colorScheme.secondary,
          ),
        ),
      ],
    );
  }

  Widget _buildSummaryRow(BuildContext context, String label, String value) {
    final colorScheme = Theme.of(context).colorScheme;

    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Text(
          label,
          style: Theme.of(context).textTheme.bodyMedium?.copyWith(
            color: colorScheme.secondary,
            fontWeight: FontWeight.w600,
          ),
        ),
        Text(
          value,
          style: Theme.of(context).textTheme.titleMedium?.copyWith(
            fontWeight: FontWeight.bold,
            color: colorScheme.secondary,
          ),
        ),
      ],
    );
  }
}
