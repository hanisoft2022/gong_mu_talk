rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    function isValidImageUpload() {
      return request.resource != null &&
        request.resource.size < 10 * 1024 * 1024 &&
        request.resource.contentType.matches('image/.*');
    }

    function canWriteImage(uid) {
      return isOwner(uid) && (request.resource == null || isValidImageUpload());
    }

    match /post_images/{userId}/{postId}/{fileName} {
      allow read: if true;
      allow write: if canWriteImage(userId);
    }

    match /profile_images/{userId}/{fileName} {
      allow read: if true;
      allow write: if canWriteImage(userId);
    }

    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
