rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() {
      return request.auth != null;
    }

    function hasValidAppCheck() {
      return isSignedIn() && request.auth.token.firebaseAppCheck != null;
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    function isAllowedImage() {
      return request.resource.contentType.matches('image/(jpeg|png|gif|webp)') &&
        request.resource.size < 10 * 1024 * 1024;
    }

    match /post_images/{uid}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(uid) && hasValidAppCheck() && isAllowedImage();
    }

    match /profile_images/{uid}/{allPaths=**} {
      allow read: if true;
      allow write: if isOwner(uid) && hasValidAppCheck() && isAllowedImage();
    }

    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
